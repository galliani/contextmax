name: Publish to NPM

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm install --ignore-scripts
      
      - name: Rebuild native modules
        run: |
          npm rebuild oxc-parser --update-binary
          npm install @rollup/rollup-linux-x64-gnu --save-optional
          npx nuxi prepare || true
      
      - name: Run tests
        run: npm test
      
      - name: Update version (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        id: version-bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          NEW_VERSION=$(npm version ${{ github.event.inputs.version }} -m "chore: bump version to %s" | sed 's/^v//')
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          git push origin HEAD:${{ github.ref_name }}
      
      - name: Generate static files
        run: npm run generate
      
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      
      - name: Create GitHub Release (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ steps.version-bump.outputs.version }} \
            --title "Release v${{ steps.version-bump.outputs.version }}" \
            --notes "Release v${{ steps.version-bump.outputs.version }}" \
            --draft=false